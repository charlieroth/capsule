name: CI

on:
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgres://capsule:capsule_password@localhost:5432/capsule_dev
  JWT_SECRET: dev-secret-change-me
  RUSTC_WRAPPER: sccache
  SCCACHE_GHA_ENABLED: "true"

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: capsule
          POSTGRES_PASSWORD: capsule_password
          POSTGRES_DB: capsule_dev
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.6

      - name: Rust dependency cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ci-cache
          cache-provider: github

      # Fast, cached installs for cargo-installed tools
      - name: Install sqlx-cli (cached)
        uses: baptiste0928/cargo-install@v3
        with:
          crate: sqlx-cli
          version: 0.7.4
          args: --no-default-features --features native-tls,postgres
          locked: true

      # Use purpose-built actions instead of installing binaries
      # - name: Security audit
      #   uses: actions-rs/audit-check@v1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}

      # - name: License/dependency policy
      #   uses: EmbarkStudios/cargo-deny-action@v2

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U capsule; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run database migrations
        run: sqlx migrate run

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Tests
        run: cargo test --all-features --locked

      - name: SQLx prepare check
        run: cargo sqlx prepare --check --workspace -- --all-features

      - name: sccache stats
        run: sccache --show-stats || true
